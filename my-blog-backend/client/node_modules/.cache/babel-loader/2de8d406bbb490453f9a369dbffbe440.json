{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\home\\\\Downloads\\\\my-blog\\\\src\\\\pages\\\\ArticlePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport articleContent from './article-content';\nimport ArticlesList from '../component/ArticlesList';\nimport AddComments from './AddComments';\nimport Comments from './Comments';\nimport NotFoundPage from './NotFoundPage';\nimport UpvotesSection from './UpvotesSection';\nimport NavBar from './NavBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ArticlePage = () => {\n  _s();\n\n  const {\n    name\n  } = useParams();\n  const article = articleContent.find(article => article.name === name); // temporary storage of data\n\n  const [articlesInfo, setArticleInfo] = useState({\n    upvotes: 0,\n    comments: []\n  }); // backend connection api\n\n  useEffect(() => {\n    fetchData();\n  });\n\n  const fetchData = async () => {\n    const result = await fetch(`/api/articles/${name}`);\n    const body = await result.json();\n    setArticleInfo(body);\n  };\n\n  if (!article) return /*#__PURE__*/_jsxDEV(NotFoundPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 25\n  }, this);\n  const otherArticles = articleContent.filter(article => article.name !== name);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"article-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: article.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(UpvotesSection, {\n        name: name,\n        setArticleInfo: setArticleInfo,\n        upvotes: articlesInfo.upvotes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 12\n      }, this), article.content.map((paragraph, key) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: paragraph\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 51\n      }, this)), /*#__PURE__*/_jsxDEV(Comments, {\n        comments: articlesInfo.comments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(AddComments, {\n        name: name,\n        setArticleInfo: setArticleInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Other Articles:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ArticlesList, {\n        articles: otherArticles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ArticlePage, \"iFz5dXCoqYoafGG4xJy6D0RKfUo=\", false, function () {\n  return [useParams];\n});\n\n_c = ArticlePage;\nexport default ArticlePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArticlePage\");","map":{"version":3,"sources":["C:/Users/home/Downloads/my-blog/src/pages/ArticlePage.js"],"names":["React","useEffect","useState","useParams","articleContent","ArticlesList","AddComments","Comments","NotFoundPage","UpvotesSection","NavBar","ArticlePage","name","article","find","articlesInfo","setArticleInfo","upvotes","comments","fetchData","result","fetch","body","json","otherArticles","filter","title","content","map","paragraph","key"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAM;AAAEC,IAAAA;AAAF,MAAST,SAAS,EAAxB;AACA,QAAMU,OAAO,GAACT,cAAc,CAACU,IAAf,CAAoBD,OAAO,IAAEA,OAAO,CAACD,IAAR,KAAeA,IAA5C,CAAd,CAFsB,CAGtB;;AACA,QAAM,CAACG,YAAD,EAAcC,cAAd,IAA8Bd,QAAQ,CAAC;AAACe,IAAAA,OAAO,EAAC,CAAT;AAAWC,IAAAA,QAAQ,EAAC;AAApB,GAAD,CAA5C,CAJsB,CAMtB;;AACAjB,EAAAA,SAAS,CAAC,MAAI;AACVkB,IAAAA,SAAS;AACZ,GAFQ,CAAT;;AAGQ,QAAMA,SAAS,GAAC,YAAS;AACzB,UAAMC,MAAM,GAAC,MAAMC,KAAK,CAAE,iBAAgBT,IAAK,EAAvB,CAAxB;AACA,UAAMU,IAAI,GAAC,MAAMF,MAAM,CAACG,IAAP,EAAjB;AACAP,IAAAA,cAAc,CAACM,IAAD,CAAd;AACH,GAJG;;AAOR,MAAG,CAACT,OAAJ,EAAa,oBAAO,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,QAAMW,aAAa,GAACpB,cAAc,CAACqB,MAAf,CAAsBZ,OAAO,IAAEA,OAAO,CAACD,IAAR,KAAeA,IAA9C,CAApB;AACA,sBACI;AAAA,4BACA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADA,eAGA;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACG;AAAA,kBAAKC,OAAO,CAACa;AAAb;AAAA;AAAA;AAAA;AAAA,cADH,eAEG,QAAC,cAAD;AAAgB,QAAA,IAAI,EAAEd,IAAtB;AAA4B,QAAA,cAAc,EAAEI,cAA5C;AAA4D,QAAA,OAAO,EAAED,YAAY,CAACE;AAAlF;AAAA;AAAA;AAAA;AAAA,cAFH,EAGIJ,OAAO,CAACc,OAAR,CAAgBC,GAAhB,CAAoB,CAACC,SAAD,EAAWC,GAAX,kBAAkB;AAAA,kBAAcD;AAAd,SAAQC,GAAR;AAAA;AAAA;AAAA;AAAA,cAAtC,CAHJ,eAIG,QAAC,QAAD;AAAU,QAAA,QAAQ,EAAEf,YAAY,CAACG;AAAjC;AAAA;AAAA;AAAA;AAAA,cAJH,eAKG,QAAC,WAAD;AAAa,QAAA,IAAI,EAAEN,IAAnB;AAAyB,QAAA,cAAc,EAAEI;AAAzC;AAAA;AAAA;AAAA;AAAA,cALH,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAOG,QAAC,YAAD;AAAc,QAAA,QAAQ,EAAEQ;AAAxB;AAAA;AAAA;AAAA;AAAA,cAPH;AAAA;AAAA;AAAA;AAAA;AAAA,YAHA;AAAA,kBADJ;AAeH,CAlCD;;GAAMb,W;UACaR,S;;;KADbQ,W;AAoCN,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport articleContent from './article-content';\r\nimport ArticlesList from '../component/ArticlesList';\r\nimport AddComments from './AddComments';\r\nimport Comments from './Comments';\r\nimport NotFoundPage from './NotFoundPage';\r\nimport UpvotesSection from './UpvotesSection';\r\nimport NavBar from './NavBar';\r\n\r\nconst ArticlePage = () => {\r\n    const { name }=useParams();\r\n    const article=articleContent.find(article=>article.name===name);\r\n    // temporary storage of data\r\n    const [articlesInfo,setArticleInfo]=useState({upvotes:0,comments:[]});\r\n\r\n    // backend connection api\r\n    useEffect(()=>{\r\n        fetchData();\r\n    });\r\n            const fetchData=async()=>{\r\n            const result=await fetch(`/api/articles/${name}`);\r\n            const body=await result.json();\r\n            setArticleInfo(body);\r\n        }\r\n    \r\n\r\n    if(!article) return <NotFoundPage/>\r\n    const otherArticles=articleContent.filter(article=>article.name!==name)\r\n    return (\r\n        <>\r\n        <NavBar/>\r\n\r\n        <div className='article-page'>\r\n           <h1>{article.title}</h1> \r\n           <UpvotesSection name={name} setArticleInfo={setArticleInfo} upvotes={articlesInfo.upvotes}/>\r\n           {article.content.map((paragraph,key)=>(<p key={key}>{paragraph}</p>))}\r\n           <Comments comments={articlesInfo.comments}/>\r\n           <AddComments name={name} setArticleInfo={setArticleInfo}/>\r\n            <h3>Other Articles:</h3>\r\n           <ArticlesList articles={otherArticles}/>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ArticlePage;"]},"metadata":{},"sourceType":"module"}